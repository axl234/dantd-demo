{"version":3,"sources":["pages/Home/chong.png","pages/Home/chahua.png","pages/NotFound/index.tsx","components/descriptions/index.tsx","components/descriptions/Descriptions.tsx","components/card/Card.tsx","components/card/index.tsx","components/empty-line/index.tsx","components/empty-line/EmptyLine.tsx","pages/Home/index.tsx","components/descriptions/mock.ts","config.tsx","pages/Component/index.tsx","components/card/demo.tsx","components/descriptions/demo.tsx","components/empty-line/demo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NotFound","Descriptions","props","className","title","dataSource","map","dataItem","key","content","Array","isArray","length","join","Paragraph","Typography","DCard","antdProps","copyText","children","extra","style","marginBottom","copyable","Card","EmptyLine","height","Meta","Home","hr","Date","getHours","hello","span","avatar","marginTop","size","src","img","description","value","routeCfg","routes","prefix","type","img2","alt","data1","data2","icon","exact","component","inMenu","path","route","RouteWithSubRoutes","href","bordered","width","gutter","Header","Sider","Content","SubMenu","render","withRouter","useState","collapsed","setCollapsed","trigger","collapsible","theme","mode","defaultSelectedKeys","defaultOpenKeys","routeItem","subItem","Item","to","background","padding","onClick","Boolean","window","location","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10f29e56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chong.cc562d8c.png\";","module.exports = __webpack_public_path__ + \"static/media/chahua.471ebf29.png\";","import React from 'react';\n\nconst NotFound = () => {\n  return <div>Not Found!</div>;\n};\n\nexport default NotFound;\n","import Descriptions from './Descriptions';\n\nexport default Descriptions;\n","import React from 'react';\n\nimport './style/index.less';\n\nexport interface IDescriptionItem {\n  title: string;\n  content: string | string[];\n}\n\nexport interface IDescriptionsProps {\n  title?: string;\n  dataSource: IDescriptionItem[];\n}\n\nconst Descriptions: React.FC<IDescriptionsProps> = props => {\n  function renderEmpty(content: string | string[]) {\n    if (!content || (Array.isArray(content) && content.length === 0)) {\n      return '暂无数据';\n    }\n    return null;\n  }\n  return (\n    <div className=\"d-desc\">\n      {props.title && <div className=\"title\">{props.title}</div>}\n      {props.dataSource.map(dataItem => {\n        return (\n          <div key={`desc-${dataItem.title}`} className=\"item\">\n            <div className=\"item-title\">{dataItem.title}</div>\n            <div className=\"item-content\">\n              {renderEmpty(dataItem.content)}\n              {typeof dataItem.content === 'string'\n                ? dataItem.content\n                : dataItem.content.join('，')}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Descriptions;\n","import React from 'react';\n// import classNames from 'classnames';\nimport Card, { CardProps } from 'antd/lib/card';\nimport Typography from 'antd/lib/typography';\nimport 'antd/lib/card/style';\nimport 'antd/lib/typography/style';\nimport './style/index.less';\n\nconst { Paragraph } = Typography;\n\nexport interface IDCardProps {\n  antdProps?: CardProps;\n  copyText?: string;\n  children?: React.ReactNode;\n}\n\nconst DCard: React.FC<IDCardProps> = ({ antdProps, copyText, children }) => {\n  function renderRightExtra() {\n    if (copyText) {\n      return (\n        <Paragraph style={{ marginBottom: 0 }} copyable>\n          {copyText}\n        </Paragraph>\n      );\n    }\n\n    return false;\n  }\n\n  return (\n    <div className=\"d-card\">\n      <Card extra={renderRightExtra()} {...antdProps}>\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default DCard;\n","import Card from './Card';\n\nexport default Card;\n","import EmptyLine from './EmptyLine';\n\nexport default EmptyLine;\n","import React from 'react';\nimport './style/index.less';\n\nexport interface IEmptyLineProps {\n  height?: number;\n}\n\nconst EmptyLine = ({ height = 20 }: IEmptyLineProps) => {\n  return <div className=\"d-empty-line\" style={{ height }} />;\n};\n\nexport default EmptyLine;\n","import React from 'react';\nimport { Card, Avatar, Statistic, Icon, Row, Col } from 'antd';\nimport { EmptyLine } from 'components';\nimport { routeCfg } from '../../config';\nimport './style.less';\nimport img from './chong.png';\nimport img2 from './chahua.png';\n\nconst { Meta } = Card;\n\nconst Home = () => {\n  const ndate = new Date();\n  const hr = ndate.getHours();\n  let hello = '早上好';\n  if (hr >= 12 && hr <= 17) {\n    hello = '下午好';\n  }\n\n  if (hr >= 17 && hr <= 24) {\n    hello = '晚上好';\n  }\n\n  return (\n    <div className=\"p-home\">\n      <h3> 组件平台 </h3>\n      <EmptyLine />\n      <Row>\n        <Col span={20}>\n          <Meta\n            avatar={<Avatar style={{ marginTop: 5 }} size=\"large\" src={img} />}\n            title={`${hello}，祝你开心每一天`}\n            description=\"消除恐惧的最好办法就是面对恐惧！坚持，才是胜利。加油！奥利给！\"\n          />\n        </Col>\n        <Col style={{ marginTop: -13 }} span={4}>\n          <Statistic\n            title=\"当前组件总数\"\n            value={routeCfg[1].routes?.length}\n            prefix={<Icon type=\"like\" />}\n          />\n        </Col>\n      </Row>\n      <div className=\"img-wrapper\">\n        <img src={img2} alt=\"组件平台\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","export const data1 = [\n  {\n    title: '【番剧推荐】为寻你，吾宁赴深渊——《龙的牙医》',\n    content: '呐，龙是用牙齿哭泣的啊——《龙的牙医》',\n  },\n  {\n    title: '《紫罗兰永恒花园外传：永远与自动手记人偶》值得看吗？',\n    content:\n      '《紫罗兰永恒花园外传：永远与自动手记人偶》已于1月10日登录国内影院。考虑到影片国内刚刚上映没几天，本篇推荐并不会涉及太多剧情上的...',\n  },\n];\nexport const data2 = [\n  {\n    title: '82年生的金智英 / 82年生金智英 / Kim Ji-young,Born 1982',\n    content: ['2019-10-23(韩国)', '2019-11-07(中国香港)', '郑有美', '孔侑', '金美京'],\n  },\n  {\n    title: '\t小丑 / 小丑起源电影：罗密欧 / Romeo',\n    content: [\n      '2019-08-31(威尼斯电影节)',\n      '2019-10-04(美国)',\n      '华金·菲尼克斯',\n      '罗伯特·德尼罗',\n      '马克·马龙',\n    ],\n  },\n];\n","import Home from 'pages/Home';\nimport Component from 'pages/Component';\n\n// components\nimport Card from 'components/card/demo';\nimport Descriptions from 'components/descriptions/demo';\nimport EmptyLine from 'components/empty-line/demo';\n\nexport interface IRouteSubProps {\n  key: string;\n  title: string;\n  path: string;\n  icon?: string;\n  exact?: boolean;\n  component: React.ComponentType<any>;\n}\n\nexport interface IRouteCfgProps {\n  key: string;\n  title: string;\n  path: string;\n  icon?: string;\n  exact?: boolean;\n  component: React.ComponentType<any>;\n  inMenu?: boolean;\n  hide?: boolean;\n  routes?: Array<IRouteSubProps>;\n}\n\nexport const routeCfg: IRouteCfgProps[] = [\n  {\n    key: 'home',\n    icon: 'home',\n    title: '首页',\n    exact: true,\n    component: Home,\n    inMenu: true,\n    path: '/',\n  },\n  {\n    key: 'comp',\n    icon: 'gold',\n    title: '组件',\n    inMenu: true,\n    component: Component,\n    path: '/comp',\n    routes: [\n      {\n        key: 'card',\n        title: '卡片·Card',\n        component: Card,\n        path: '/comp/card',\n      },\n      {\n        key: 'descriptions',\n        title: '简介·Descriptions',\n        component: Descriptions,\n        path: '/comp/descriptions',\n      },\n      {\n        key: 'empty-line',\n        title: '空行·EmptyLine',\n        component: EmptyLine,\n        path: '/comp/empty-line',\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport { RouteWithSubRoutes } from '../../App';\nimport { Switch } from 'react-router-dom';\nimport './style.less';\n\ninterface ICompProps {\n  routes: any[];\n}\n\nconst Comp = ({ routes }: ICompProps) => {\n  return (\n    <div className=\"p-comp\">\n      <Switch>\n        {routes.map((route: any) => (\n          <RouteWithSubRoutes key={route.key} {...route} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Comp;\n","import React from 'react';\nimport Card from './Card';\n\nconst demo = () => {\n  return (\n    <div>\n      <h3>组件名称：卡片（Card）</h3>\n      <p>简单封装了 Card 组件，增加了 nsextra 属性，集成了复制到剪切板的功能。</p>\n      <p>\n        {' '}\n        其他的配置参考 ：<a href=\"https://ant.design/components/card-cn/\">Antd Card</a>\n      </p>\n\n      <Card antdProps={{ bordered: false, title: '无边框卡片' }}>\n        <div style={{ width: 300, height: 300 }}>卡片详情</div>\n      </Card>\n      <br />\n      <Card antdProps={{ title: '普通卡片' }}>\n        <div style={{ width: 300, height: 300 }}>卡片详情</div>\n      </Card>\n      <br />\n      <Card\n        antdProps={{ title: '有复制信息的卡片' }}\n        copyText=\"打开支付宝首页搜“681424595”领红包，领到大红包的小伙伴赶紧使用哦！\"\n      >\n        <div style={{ width: 300, height: 300 }}>卡片详情</div>\n      </Card>\n    </div>\n  );\n};\n\nexport default demo;\n","import React from 'react';\nimport Card from 'components/card';\nimport Descriptions from 'components/descriptions';\nimport { Row, Col } from 'antd';\nimport { data1, data2 } from './mock';\n\nconst demo = () => {\n  return (\n    <div>\n      <h3>组件名称：信息（Descriptions）</h3>\n      <p>自定义组件，用于展示一个简单的信息列表</p>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Card antdProps={{ title: '番剧' }}>\n            <Descriptions title=\"番剧推荐\" dataSource={data1} />\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card antdProps={{ title: '电影' }}>\n            <Descriptions dataSource={data2} />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default demo;\n","import React from 'react';\nimport EmptyLine from 'components/empty-line';\n\nconst demo = () => {\n  return (\n    <div>\n      <h3>组件名称：空行（EmptyLine）</h3>\n      <p>自定义组件，默认高度 20 ，宽度 100%</p>\n      <p>第一行文字</p>\n      <EmptyLine />\n      <p>第二行文字</p>\n    </div>\n  );\n};\n\nexport default demo;\n","import React, { useState } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Switch, Route, withRouter, NavLink } from 'react-router-dom';\nimport NotFound from 'pages/NotFound';\nimport { routeCfg, IRouteCfgProps } from './config';\nimport './App.less';\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nexport function RouteWithSubRoutes(route: IRouteCfgProps) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nconst App: React.FC = () => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  function toggle() {\n    setCollapsed(!collapsed);\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Sider trigger={null} collapsible collapsed={collapsed}>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            defaultSelectedKeys={['home']}\n            defaultOpenKeys={['comp']}\n          >\n            {routeCfg.map(routeItem => {\n              if (routeItem.routes) {\n                return (\n                  <SubMenu\n                    key={routeItem.key}\n                    title={\n                      <span>\n                        {routeItem.icon && <Icon type={routeItem.icon} />}\n                        <span>{routeItem.title}</span>\n                      </span>\n                    }\n                  >\n                    {routeItem.routes.map(subItem => {\n                      return (\n                        <Menu.Item key={subItem.key}>\n                          <NavLink to={subItem.path}>\n                            {subItem.icon && <Icon type={subItem.icon} />}\n                            <span>{subItem.title}</span>\n                          </NavLink>\n                        </Menu.Item>\n                      );\n                    })}\n                  </SubMenu>\n                );\n              } else if (routeItem.component) {\n                return (\n                  <Menu.Item key={routeItem.key}>\n                    <NavLink to={routeItem.path}>\n                      {routeItem.icon && <Icon type={routeItem.icon} />}\n                      <span>{routeItem.title}</span>\n                    </NavLink>\n                  </Menu.Item>\n                );\n              }\n              return null;\n            })}\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Icon\n              className=\"trigger\"\n              type={collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={toggle}\n            />\n          </Header>\n          <Content className=\"App-content\">\n            <Switch>\n              {routeCfg.map(route => (\n                <RouteWithSubRoutes key={route.key} {...route} />\n              ))}\n              <Route component={NotFound} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}